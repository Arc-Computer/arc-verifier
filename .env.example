# Arc-Verifier Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# LLM Provider Configuration (Required for AI Analysis)
# =============================================================================

# Primary LLM provider for AI analysis
# Options: "anthropic", "openai", "local"
LLM_PRIMARY_PROVIDER=anthropic

# Fallback LLM provider (optional)
# Used if primary provider fails
LLM_FALLBACK_PROVIDER=openai

# Enable ensemble evaluation (uses multiple providers for verification)
LLM_ENABLE_ENSEMBLE=false

# LLM request timeout in seconds
LLM_TIMEOUT_SECONDS=30

# Maximum tokens for LLM responses
LLM_MAX_TOKENS=2048

# =============================================================================
# API Keys (Required for respective providers)
# =============================================================================

# Anthropic Claude API key
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# OpenAI API key  
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# Docker Configuration
# =============================================================================

# Docker daemon socket (usually auto-detected)
# DOCKER_HOST=unix:///var/run/docker.sock

# =============================================================================
# TEE (Trusted Execution Environment) Configuration
# =============================================================================

# Phala Cloud endpoint for TEE validation
# PHALA_CLOUD_ENDPOINT=https://api.phala.cloud

# Intel SGX attestation service URL
# SGX_ATTESTATION_URL=https://api.trustedservices.intel.com

# AMD SEV attestation endpoint
# SEV_ATTESTATION_URL=https://kdsintf.amd.com

# =============================================================================
# Market Data Configuration
# =============================================================================

# Binance data source URL (for backtesting)
BINANCE_DATA_URL=https://data.binance.vision

# Custom regime for backtesting (optional)
# Options: "bull_2024", "bear_2022", "sideways_2023", etc.
REGIME=normal

# =============================================================================
# Security Configuration
# =============================================================================

# Enable audit logging
ENABLE_AUDIT_LOGGING=true

# Audit log file path
AUDIT_LOG_PATH=./logs/audit.jsonl

# Enable strict security validation
STRICT_SECURITY_MODE=true

# Maximum allowed vulnerability severity
# Options: "low", "medium", "high", "critical"
MAX_VULNERABILITY_SEVERITY=medium

# =============================================================================
# Performance Configuration
# =============================================================================

# Number of parallel verification workers
PARALLEL_WORKERS=4

# Benchmark timeout in seconds
BENCHMARK_TIMEOUT=300

# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=true

# =============================================================================
# Development Configuration
# =============================================================================

# Enable debug mode (more verbose logging)
DEBUG_MODE=false

# Enable mock mode for testing
MOCK_MODE=false

# Local API server port for simulation
MOCK_SERVER_PORT=8888

# =============================================================================
# Enterprise Configuration
# =============================================================================

# Company name for audit logs
COMPANY_NAME=YourCompany

# Environment designation
ENVIRONMENT=production

# Compliance requirements
# Options: "sox", "gdpr", "hipaa", "pci"
COMPLIANCE_MODE=sox

# Maximum agent capital exposure (USD)
MAX_AGENT_CAPITAL=1000000

# Required Fort Score threshold for approval
MIN_FORT_SCORE=120

# =============================================================================
# Notification Configuration (Optional)
# =============================================================================

# Slack webhook for critical alerts
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email notifications for high-risk findings
# SMTP_SERVER=smtp.yourcompany.com
# SMTP_PORT=587
# SMTP_USERNAME=notifications@yourcompany.com
# SMTP_PASSWORD=your_smtp_password
# NOTIFICATION_EMAIL=security@yourcompany.com

# =============================================================================
# Notes
# =============================================================================
# 
# Required Variables:
# - At least one of ANTHROPIC_API_KEY or OPENAI_API_KEY for LLM analysis
# 
# Optional but Recommended:
# - COMPANY_NAME and ENVIRONMENT for enterprise deployments
# - ENABLE_AUDIT_LOGGING for compliance tracking
# 
# Security Best Practices:
# - Never commit .env files to version control
# - Use different API keys for different environments
# - Regularly rotate API keys
# - Monitor API usage and costs
# - Set up alerts for failed verifications
#
EOF < /dev/null